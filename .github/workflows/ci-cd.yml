name: ApliKasir Backend CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    name: Continuous Integration & Testing
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with: { node-version: '20' }
      - run: npm install
      - run: npm install -g newman && newman run "ApliKasir_API_Collection.json"

  sonar-scan:
    name: Continous Inspection dengan SonarQube
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    steps:
      - uses: actions/checkout@v2
        with: { fetch-depth: 0 }
      - name: SonarQube Scan
        uses: SonarSource/sonarcloud-github-action@4006f663ecaf1f8093e8e4abb9227f6041f52216
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args:
            -Dsonar.projectKey=ApliKasir-Codebase_ApliKasir-Backend
            -Dsonar.organization=aplikasir-codebase
          projectBaseDir: .

  docker-build-and-push:
    name: Bangun Docker Image dan Push ke Docker Hub
    runs-on: ubuntu-latest
    needs: [build-and-test, sonar-scan]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v2
      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: hshinosa/aplikasir-backend:latest

  deploy-to-vps:
    name: Deploy ke VPS
    runs-on: ubuntu-latest
    needs: docker-build-and-push
    steps:
      - name: Deploy ke VPS via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}
          script: |
            cd ~/aplikasir-backend
            docker pull hshinosa/aplikasir-backend:latest
            docker-compose up -d --force-recreate